name: Build & Tests
on: [push, pull_request]
env:
  NODE_REPO: paritytech/substrate-contracts-node
  NODE_BIN_FILENAME: substrate-contracts-node
  NODE_FILENAME_MAC: substrate-contracts-node-mac-universal.tar.gz
  NODE_FILENAME_LINUX: substrate-contracts-node-linux.tar.gz
jobs:
  apple:
    strategy:
      matrix:
        tests: 
          - xcode: '14.2'
            machine: macos-12
          - xcode: '14.3.1'
            machine: macos-13
    runs-on: ${{ matrix.tests.machine }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.tests.xcode }}.app
      - name: Get node version
        id: node-version
        run: echo "VERSION=$(cat Tests/node-version.txt)" >> "$GITHUB_OUTPUT"
      - name: Download Substrate Node
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          repo: ${{ env.NODE_REPO }}
          version: 'tags/${{ steps.node-version.outputs.VERSION }}'
          file: ${{ env.NODE_FILENAME_MAC }}
      - name: Unpack Substrate Node
        run: |
          NODE_BIN=$(tar -xvzf ${{ env.NODE_FILENAME_MAC }} 2>&1 | sed -n "s|^x[[:blank:]]*\(.*${{ env.NODE_BIN_FILENAME }}\)$|\1|p")
          echo "NODE_BIN=${NODE_BIN}" >> "$GITHUB_ENV"
      - name: Build & Test SPM
        run: Tests/with-node.sh "${NODE_BIN}" 'xcrun swift test' 'node_log.txt'
      - name: Upload swift test node log
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: swift_test_node_full_log.txt
          path: node_log.txt
      - name: Cocoapods Repo Update
        run: pod repo update
      - name: Substrate Build & Test Cocoapods
        run: |
          pod lib lint --allow-warnings --fail-fast Substrate.podspec
          # save podspec to env
          echo "LINTED_PODS=Substrate.podspec" >> "$GITHUB_ENV"
      - name: Keychain Build & Test Cocoapods
        run: |
          pod lib lint --allow-warnings --fail-fast --include-podspecs="{${LINTED_PODS}}" Substrate-Keychain.podspec
          # save podspec to env
          echo "LINTED_PODS=${LINTED_PODS},Substrate-Keychain.podspec" >> "$GITHUB_ENV"
      - name: RPC Build & Test Cocoapods
        run: |
          Tests/with-node.sh "${NODE_BIN}" \
            'pod lib lint --allow-warnings --fail-fast --include-podspecs="{${LINTED_PODS}}" Substrate-RPC.podspec' \
            'cp_node_log.txt'
      - name: Upload swift test node log
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: cocoapods_node_full_log.txt
          path: cp_node_log.txt
  linux:
    strategy:
      matrix:
        swift: ['5.8'] 
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    container:
      image: swift:${{ matrix.swift }}
      options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --security-opt apparmor=unconfined
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get node version
        id: node-version
        run: echo "VERSION=$(cat Tests/node-version.txt)" >> "$GITHUB_OUTPUT"
      - name: Download Substrate Node
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          repo: ${{ env.NODE_REPO }}
          version: 'tags/${{ steps.node-version.outputs.VERSION }}'
          file: ${{ env.NODE_FILENAME_LINUX }}
      - name: Unpack Substrate Node
        run: |
          NODE_BIN=$(tar -xvzf ${{ env.NODE_FILENAME_LINUX }} 2>&1 | sed -n "s|^[[:blank:]]*\(.*${{ env.NODE_BIN_FILENAME }}\)$|\1|p")
          echo "NODE_BIN=${NODE_BIN}" >> "$GITHUB_ENV"
      - name: Build and Test
        run: Tests/with-node.sh "${NODE_BIN}" 'swift test' 'node_log.txt'
      - name: Upload node log
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: linux_swift_test_node_full_log.txt
          path: node_log.txt